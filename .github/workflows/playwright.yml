name: Playwright MCP Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        node-version: ['18', '20']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install Python dependencies
      working-directory: ./backend/train-at-kbtg-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Install Node.js dependencies
      working-directory: ./backend/train-at-kbtg-backend
      run: npm ci
    
    - name: Install Playwright Browsers
      working-directory: ./backend/train-at-kbtg-backend
      run: npx playwright install --with-deps
    
    - name: Set up test database
      working-directory: ./backend/train-at-kbtg-backend
      run: |
        export FLASK_ENV=testing
        python -c "from app import app, db; app.app_context().push(); db.create_all()"
    
    - name: Run Smoke Tests
      working-directory: ./backend/train-at-kbtg-backend
      run: npx playwright test --grep "@smoke"
      env:
        CI: true
        FLASK_ENV: testing
    
    - name: Run API Tests
      working-directory: ./backend/train-at-kbtg-backend
      run: npx playwright test --grep "@api"
      env:
        CI: true
        FLASK_ENV: testing
    
    - name: Run Authentication Tests
      working-directory: ./backend/train-at-kbtg-backend
      run: npx playwright test --grep "@auth"
      env:
        CI: true
        FLASK_ENV: testing
    
    - name: Run Integration Tests
      working-directory: ./backend/train-at-kbtg-backend
      run: npx playwright test --grep "@integration"
      env:
        CI: true
        FLASK_ENV: testing
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.python-version }}-${{ matrix.node-version }}
        path: ./backend/train-at-kbtg-backend/playwright-report/
        retention-days: 30
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}-${{ matrix.node-version }}
        path: ./backend/train-at-kbtg-backend/test-results/
        retention-days: 30
